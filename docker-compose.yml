version: "3"
services:
  patientdb:
    image: 'mysql:8.0.27'
    container_name: patientdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mediscreenapp
    ports:
      - "3306:3306"
    volumes:
      - /Users/lime/mediscreen-patient:/var/lib/mysql
    networks:
      - spring-cloud-network

  mediscreen-patient:
    image: mediscreen-patient
    container_name: mediscreen-patient
    restart: always
    build:
      context: "./mediscreen-patient"
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      MYSQL_HOST: patientdb
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3306
    depends_on:
      - patientdb
    networks:
      - spring-cloud-network

  recorddb:
    image: mongo
    container_name: recorddb
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - spring-cloud-network

  mediscreen-record:
    image: mediscreen-record
    container_name: mediscreen-record
    restart: always
    build:
      context: "./mediscreen-record"
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      MONGO_HOST: recorddb
      MONGO_PORT: 27017
    depends_on:
      - recorddb
    networks:
      - spring-cloud-network

  mediscreen-report:
    image: mediscreen-report
    container_name: mediscreen-report
    restart: always
    build:
      context: "./mediscreen-report"
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      PATIENT_HOST: mediscreen-patient
      PATIENT_PORT: 8081
      RECORD_HOST: mediscreen-record
      RECORD_PORT: 8082
    depends_on:
      - mediscreen-patient
      - mediscreen-record
    networks:
      - spring-cloud-network

  mediscreen-ui:
    image: mediscreen-ui
    container_name: mediscreen-ui
    restart: always
    build:
      context: "./mediscreen-ui"
      dockerfile: Dockerfile
    depends_on:
      - mediscreen-patient
      - mediscreen-record
      - mediscreen-report
    ports:
      - "8080:80"
    networks:
      - spring-cloud-network

volumes:
  mongodbdata:
    external: true

networks:
  spring-cloud-network:
    driver: bridge
